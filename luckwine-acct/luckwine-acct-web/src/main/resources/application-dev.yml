# 配置文件加密因子key
jasypt:
  encryptor:
    password: luckwine_acct

#Web服务器本地访问端口
server:
  port: 8008

#数据源配置 MyBatisConfig.class
spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.50.131:3306/luckwine-acct?useSSL=false&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
    username: root
    password: worm010304124
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 1
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-open-prepared-statements: 20
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
mybatis:
  mapper-locations: classpath:/mapper/*.xml
  config-location: classpath:/mybatis-config.xml

# dubbo最新配置，整合了注册中心配置
dubbo:
  application:
    name: luckwine-acct
    version: 1.0.0
  protocol:
    port: 28038
    status: server
  registry:
    address: zookeeper://192.168.50.131:2181
    timeout: 6000
    version: 1.0.0
    check: true
    file: ./.dubbo/luckwine_acct_registry
  scan:
    base-packages: com.luckwine.acct
  provider:
    version: 1.0.0
    timeout: 6000
    #加载dubbo日志打印过滤器
    filter: dubboLogFilter
    validation: true

#日志相关
logging:
  config: classpath:logback.xml

#springboot管理相关，结合pringboot actuator一起使用
management:
  info:
    git:
      mode: full
    build:
      enabled: true
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    db:
      enabled: true
    #    redis:
    #      enabled: true
    diskspace:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      enabled: true
      show-details: always
    info:
      enabled: true